{"version":3,"file":"static/webpack/static/development/pages/contact.js.d47c71cf448b7d3cda45.hot-update.js","sources":["webpack:///./pages/contact.js"],"sourcesContent":["import React, { Component } from \"react\"\nimport styled from \"styled-components\"\nimport dynamic from \"next/dynamic\"\nimport { SegmentedControl } from \"segmented-control\"\nimport { Stitch, AnonymousCredential } from \"mongodb-stitch-browser-sdk\"\nimport {\n  Button,\n  Head,\n  Nav,\n  Paragraph,\n  ServicePageHeader as Header,\n  Title,\n  Wire\n} from \"../components\"\nimport { white, black, blue, lightBlue } from \"../styles/colors\"\nimport media from \"../styles/mediaQueries\"\n\nlet DatePicker = () => null;\n\n// Only import react-datepicker if running on client\nif (typeof window !== \"undefined\") {\n  DatePicker = dynamic(import(\"react-datepicker\"))\n\n  dynamic(import(\"react-datepicker/dist/react-datepicker.css\"))\n  dynamic(import(\"../styles/datePicker.css\"))\n  dynamic(import(\"../styles/segmentedControl.css\"))\n}\n\nconst PageWrapper = styled.div`\n  padding: 1.2rem;\n  ${media.smallTablet`padding: 3rem;`}\n`\n\nconst ButtonWrapper = styled.div`\n  margin: .5rem auto 0 auto;\n`\n\nconst Locations = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n\n  margin-top: 1.5rem;\n\n  ${media.tablet`margin-left: 28rem;`}\n`\n\nconst Location = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 0;\n  flex-grow: 1;\n`\n\nconst LocationTitle = styled.h3`\n  \n`\n\nconst LocationIcon = styled.img`\n  width: 5rem;\n  margin: .7rem 0;\n`\n\nconst LocationAddress = styled.p`\n  font-size: .8rem;\n  font-weight: 100;\n`\n\nconst Form = styled.form`\n  width: 100%;\n  \n  ${media.tablet`max-width: 50%;`}\n\n  ${media.tablet`margin-left: 28rem;`}\n`\n\nconst Label = styled.label`\n  display: block;\n \n  width: 100%;\n\n  color: rgb(${black});\n  font-size: 0.9rem;\n`\n\nconst TextInput = styled.input`\n  display: block;\n  \n  width: 100%;\n  height: 1.3rem;\n\n  ${media.veryLargeSmartphone`height: 1.9rem`}\n\n  padding: .8rem .9rem;\n  \n  border: 1px solid rgb(${blue});\n  border-radius: 15px;\n\n  font-family: Axiforma, Helvetica, \"sans-serif\";\n\n  background: rgb(${white});\n`\n\nconst FieldWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  width: 100%;\n\n  margin: .4rem 0;\n\n  ${props => props.marginRight && \"margin-right: .25rem\"}\n  ${props => props.marginLeft && \"margin-left: .25rem\"}\n`\n\nconst DividedFieldWrapper = styled(FieldWrapper)`\n  display: flex;\n`\n\nconst Textarea = styled.textarea`\n  width: 100%;\n\n  border: 1px solid rgb(${blue});\n  border-radius: 15px;\n\n  font-family: Axiforma, \"sans-serif\";\n\n  padding: 0.7rem 1rem;\n\n  background: rgb(${white});\n`\n\nclass Contact extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      emailAddress: \"\",\n      category: \"\",\n      phoneNumber: \"\",\n      message: \"\",\n      callbackPreferred: false,\n      preferredTimeForCallback: new Date()\n    }\n  }\n\n  componentDidMount() {\n    this.stitchClient = Stitch.initializeDefaultAppClient(\"outgrow-hunql\")\n    this.stitchClient.auth.loginWithCredential(new AnonymousCredential())\n  }\n\n  handleCallbackPreferredToggle = (callbackPreferred) => this.setState({ callbackPreferred })\n\n  handleFieldChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n  handlePreferredTimeChange = (preferredTimeForCallback) => this.setState({ preferredTimeForCallback })\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.stitchClient.callFunction(\"sendContactRequest\")\n  }\n\n  render() {\n    return (\n      <div style={{ position: \"relative\" }}>\n        <Head title=\"E-Commerce Consultancy | Get a Quote â€” Contact Our Team Now | out:grow\" />\n        <Nav />\n        \n        <Header\n          backgroundImage=\"/static/contact.jpg\"\n          body={[\n            \"Submit the form below and an out:grow representative will get back to you at your preferred time. Alternatively, set up a face-to-face meeting at one of our locations around the world.\",\n            \"For emergencies, do not wait and call our 24/7 hotline at +1 (281) OUT-GROW.\"\n          ]}\n          buttonText=\"Reach out\"\n          buttonTextColor={blue}\n          overlayColor={lightBlue}\n          title=\"Get in touch.\"\n        />\n\n        <Wire color={blue} />\n\n        <PageWrapper id=\"section-content\">\n          <Title color={blue}>Our locations.</Title>\n\n          <Paragraph>As a global company helping global clients, we at out:grow provide 24/7 services to retailers and agencies around the world thanks to our offices in Los Angeles and Dubai.</Paragraph>\n\n          <Locations>\n            <Location style={{ marginRight: \".5rem\" }}>\n              <LocationTitle>Los Angeles</LocationTitle>\n              <LocationIcon alt=\"Los Angeles, California\" src=\"/static/california.png\" />\n              <LocationAddress>\n                601 S. Figueroa Street<br/>\n                Suite 4050<br/>\n                Los Angeles, CA 90071<br/>\n                United States of America\n              </LocationAddress>\n            </Location>\n           \n            <Location style={{ marginLeft: \".5rem\" }}>\n              <LocationTitle>Dubai</LocationTitle>\n              <LocationIcon alt=\"Dubai, United Arab Emirates\" src=\"/static/uae.png\" />\n              <LocationAddress>\n                The Offices 3<br/>\n                One Central, World Trade Center<br/>\n                Sheikh Zayed Road<br/>\n                Dubai<br/>\n                United Arab Emirates\n              </LocationAddress>\n            </Location>\n          </Locations>\n\n          <Title color={blue}>Let us help.</Title>\n          <Form onSubmit={this.handleSubmit}>\n            <DividedFieldWrapper>\n              <FieldWrapper marginRight>\n                <TextInput\n                  id=\"emailAddress\"\n                  name=\"emailAddress\"\n                  onChange={this.handleFieldChange} \n                  type=\"email\"\n                  value={this.state.emailAddress}\n                  placeholder=\"E-mail Address\"\n                  required\n                />\n              </FieldWrapper>\n\n              <FieldWrapper marginLeft>\n                <TextInput\n                  id=\"phoneNumber\"\n                  name=\"phoneNumber\"\n                  onChange={this.handleFieldChange}\n                  type=\"tel\"\n                  value={this.state.phoneNumber}\n                  placeholder=\"Phone Number\"\n                  required\n                />\n              </FieldWrapper>\n            </DividedFieldWrapper>\n\n            <DividedFieldWrapper>\n              <FieldWrapper marginRight>\n                <Label htmlFor=\"callbackPreferred\">Should we call?</Label>\n              </FieldWrapper>\n\n              <FieldWrapper className=\"small-segmented-control-container\" marginLeft>\n                <SegmentedControl\n                  className=\"small\"\n                  name=\"callbackPreferred\"\n                  options={[\n                    { label: \"Yes\", value: true, default: true },\n                    { label: \"No\", value: false }\n                  ]}\n                  setValue={this.handleCallbackPreferredToggle}\n                  style={{\n                    borderRadius: \"25px\",\n                    color: `rgb(${blue})`,\n                    fontSize: \".8rem\",\n                    height: \"1.6rem\",\n                    transitionDuration: \"300ms\"\n                  }}\n                />\n              </FieldWrapper>\n            </DividedFieldWrapper>\n            {this.state.callbackPreferred &&\n              <DividedFieldWrapper>\n                <FieldWrapper marginRight>\n                  <Label htmlFor=\"preferredTimeForCallback\">Preferred time</Label>\n                </FieldWrapper>\n                <FieldWrapper marginLeft>\n                  <DatePicker\n                    id=\"preferredTimeForCallback\"\n                    name=\"preferredTimeForCallback\"\n                    onChange={this.handlePreferredTimeChange}\n                    selected={this.state.preferredTimeForCallback}\n                    dateFormat=\"MM-dd-yyyy HH:mm\"\n                    showTimeSelect\n                  />\n                </FieldWrapper> \n              </DividedFieldWrapper>\n            }\n        \n            <FieldWrapper>\n              <SegmentedControl\n                name=\"category\"\n                options={[\n                  { label: \"Consulting\", value: \"consulting\", default: true },\n                  { label: \"Training\", value: \"training\" },\n                  { label: \"Support\", value: \"support\" }\n                ]}\n                setValue={this.handleCategoryChange}\n                style={{\n                  borderRadius: \"25px\",\n                  color: `rgb(${blue})`,\n                  fontSize: \".8rem\",\n                  transitionDuration: \"300ms\"\n                }}\n              />\n            </FieldWrapper>\n\n            <FieldWrapper style={{ marginTop: \".8rem\" }}>\n              <Textarea\n                id=\"message\"\n                name=\"message\"\n                onChange={this.handleFieldChange}\n                value={this.state.message}\n                rows={4}\n                placeholder=\"Message\"\n              />\n            </FieldWrapper>\n\n            <ButtonWrapper>\n              <Button backgroundColor={blue} color={white} type=\"submit\">Send</Button>\n            </ButtonWrapper>\n          </Form>\n        </PageWrapper>\n      </div>\n    )\n  }\n}\n\nexport default Contact\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAYA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAkBA;AAAA;AAAA;AAAA;AACA;AAnBA;AAoBA;AAAA;AACA;AArBA;AAsBA;AAAA;AAAA;AAAA;AACA;AAvBA;AAyBA;AACA;AACA;AACA;AACA;AA1BA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAWA;AACA;;;AACA;AACA;AACA;AACA;;;AAcmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA3LA;AACA;AA6LA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}